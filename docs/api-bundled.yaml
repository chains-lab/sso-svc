openapi: 3.0.0
info:
  title: Cifra SSO REST API
  description: SSO REST API for Cifra app
  version: 0.0.1
paths:
  /test:
    post:
      tags:
        - Test
      description: Test
      responses:
        '201':
          description: successfully
components:
  schemas:
    Login:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - attributes
          properties:
            type:
              type: string
              enum:
                - registration
            attributes:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: The user's email address.
                  example: example1312@gmail.com
                password:
                  type: string
                  format: password
                  description: The user's password.
                  example: StrongP@ssw0rd!
    RegisterUser:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - attributes
          properties:
            type:
              type: string
              enum:
                - register_user
            attributes:
              type: object
              required:
                - email
                - password
                - confirm_password
              properties:
                email:
                  type: string
                  format: email
                  description: The user's email address.
                  example: example1312@gmail.com
                password:
                  type: string
                  format: password
                  description: The user's password.
                  example: StrongP@ssw0rd!
                confirm_password:
                  type: string
                  format: password
                  description: Confirmation of the user's password. Must match the password field.
                  example: StrongP@ssw0rd!
    RegisterAdmin:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - attributes
          properties:
            type:
              type: string
              enum:
                - register_admin
            attributes:
              type: object
              required:
                - email
                - password
                - confirm_password
                - role
              properties:
                email:
                  type: string
                  format: email
                  description: The user's email address.
                  example: example1312@gmail.com
                password:
                  type: string
                  format: password
                  description: The user's password.
                  example: StrongP@ssw0rd!
                confirm_password:
                  type: string
                  format: password
                  description: Confirmation of the user's password. Must match the password field.
                  example: StrongP@ssw0rd!
                role:
                  type: string
                  description: The role assigned to the registering user.
                  enum:
                    - admin
                    - moderator
                  example: admin
    RefreshSession:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - attributes
          properties:
            type:
              type: string
              enum:
                - refresh_session
            attributes:
              type: object
              required:
                - refresh_token
              properties:
                refresh_token:
                  type: string
                  description: The refresh token to generate a new access token.
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
    TokensPair:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
              format: uuid
              description: user id
            type:
              type: string
              enum:
                - tokens_pair
            attributes:
              type: object
              required:
                - access_token
                - refresh_token
              properties:
                access_token:
                  type: string
                  description: Access Token
                refresh_token:
                  type: string
                  description: Refresh Token
    AccessToken:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - attributes
          properties:
            type:
              type: string
              enum:
                - access_token
            attributes:
              type: object
              required:
                - access_token
              properties:
                refresh_token:
                  type: string
                  description: The access token to generate a new access token.
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
    UserSession:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/UserSessionData'
    UserSessionData:
      type: object
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
          format: uuid
          description: session id
        type:
          type: string
          enum:
            - user_session
        attributes:
          $ref: '#/components/schemas/UserSessionAttributes'
    UserSessionAttributes:
      type: object
      required:
        - user_id
        - client
        - ip
        - created_at
        - last_used
      properties:
        user_id:
          type: string
          format: uuid
          description: user id
        client:
          type: string
          description: client name and version
        ip:
          type: string
          description: IP address
        created_at:
          type: string
          format: date-time
          description: session creation date
        last_used:
          type: string
          format: date-time
          description: last used date
    UserSessionsCollection:
      type: object
      required:
        - data
        - links
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserSessionData'
        links:
          $ref: '#/components/schemas/PaginationData'
    User:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
              description: User ID
            type:
              type: string
              enum:
                - user
            attributes:
              type: object
              required:
                - email
                - role
                - created_at
                - updated_at
              properties:
                email:
                  type: string
                  description: Email
                role:
                  type: string
                  description: Role
                created_at:
                  type: string
                  format: date-time
                  description: Created At
                updated_at:
                  type: string
                  format: date-time
                  description: Updated At
    Errors:
      description: 'Standard JSON:API error'
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          description: Non empty array of errors occurred during request processing
          items:
            type: object
            required:
              - title
              - status
            properties:
              title:
                type: string
                description: 'Title is a short, human-readable summary of the problem'
                example: Bad Request
              detail:
                type: string
                description: Detail is a human-readable explanation specific to this occurrence of the problem
                example: Request body was expected
              status:
                type: integer
                description: Status is the HTTP status code applicable to this problem
                example: 400
                enum:
                  - 400
                  - 401
                  - 403
                  - 404
                  - 409
                  - 500
    PaginationData:
      type: object
      required:
        - page_number
        - page_size
        - total_items
      properties:
        page_number:
          type: integer
          format: int64
          description: The current page number.
          example: 1
        page_size:
          type: integer
          format: int64
          description: The number of items per page.
          example: 10
        total_items:
          type: integer
          format: int64
          description: The total number of items available.
          example: 100
